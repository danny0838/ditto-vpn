name: Publish extension

on:
  workflow_dispatch:
    inputs:
      is_draft:
        description: '建立為草稿'
        type: boolean
        default: false
      is_pre:
        description: '發布為測試版'
        type: boolean
        default: false
      environment:
        description: 'Environment'
        type: choice
        options:
          - development
          - production
        default: production

permissions:
  # for updating tag/release
  contents: write

jobs:
  main:
    name: Build and create tag/release
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      version: ${{ steps.config.outputs.version }}
      tag_name: ${{ steps.config.outputs.tag_name }}
      ext_path_zip: ${{ steps.config.outputs.ext_path_zip }}
      artifact_dir: ${{ steps.config.outputs.artifact_dir }}
      artifact_zip: ${{ steps.config.outputs.artifact_zip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure and verify
        id: config
        env:
          TIMEZONE: ${{ vars.TIMEZONE || 'UTC' }}
        run: |
          VERSION=$(jq -r '.version' './src/manifest.json')

          if [ ${{ github.event.inputs.is_pre }} = 'false' ]; then
            EXPECTED_LINE="## [$VERSION] - $(TZ="$TIMEZONE" date +%Y-%m-%d)"
            if ! grep -Fxq "$EXPECTED_LINE" CHANGELOG.md; then
              echo "❌ Missing expected changelog line: $EXPECTED_LINE"
              exit 1
            fi
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=v$VERSION" >> $GITHUB_OUTPUT
          echo "ext_path_zip=dist/ditto_vpn-$VERSION.zip" >> $GITHUB_OUTPUT
          echo "artifact_dir=dist" >> $GITHUB_OUTPUT
          echo "artifact_zip=ditto_vpn-zip" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Verify no code issue
        run: npm run lint

      - name: Build extension
        run: npm run build

      - name: Create Git tag
        run: |
          git tag --force ${{ steps.config.outputs.tag_name }}
          git push origin ${{ steps.config.outputs.tag_name }}

      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.config.outputs.tag_name }}
          draft: ${{ github.event.inputs.is_draft }}
          prerelease: ${{ github.event.inputs.is_pre }}
          make_latest: legacy  # mark latest for a release with larger version
          generate_release_notes: true
          files: ${{ steps.config.outputs.ext_path_zip }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.config.outputs.artifact_zip }}
          path: ${{ steps.config.outputs.ext_path_zip }}

  upload_cws:
    name: Upload to Chrome Web Store
    if: ${{ github.event.inputs.is_pre == 'false' }}
    runs-on: ubuntu-latest
    needs: main
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.main.outputs.artifact_zip }}
          path: ${{ needs.main.outputs.artifact_dir }}

      - name: Upload to Chrome Web Store
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          publish: ${{ github.event.inputs.is_draft == 'false' }}
          file-path: ${{ needs.main.outputs.ext_path_zip }}
          extension-id: ${{ vars.CHROME_EXTENSION_ID }}

          # https://github.com/fregante/chrome-webstore-upload-keys
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}

  upload_edge:
    name: Upload to Microsoft Edge Add-ons
    if: ${{ github.event.inputs.is_pre == 'false' }}
    runs-on: ubuntu-latest
    needs: main
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.main.outputs.artifact_zip }}
          path: ${{ needs.main.outputs.artifact_dir }}

      - name: Upload to Microsoft Edge Add-ons
        uses: wdzeng/edge-addon@v2
        with:
          upload-only: ${{ github.event.inputs.is_draft }}
          zip-path: ${{ needs.main.outputs.ext_path_zip }}
          product-id: ${{ vars.EDGE_PRODUCT_ID }}
          client-id: ${{ secrets.EDGE_CLIENT_ID }}
          api-key: ${{ secrets.EDGE_API_KEY }}
